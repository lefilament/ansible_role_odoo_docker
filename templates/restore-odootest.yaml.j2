version: "2.1"
services:
    restore_test:
        image: ghcr.io/tecnativa/docker-duplicity-postgres:master
        hostname: {{ item.value.backup_host | default(inventory_hostname_short) | lower | regex_replace('_','') }}-odoo
        networks:
            - {{ item.key }}_default
            - public
        volumes:
            - backups_{{ item.value.backup_instance }}{{ account_index + 1 }}_backup_cache:/root/.cache/duplicity/:z
            - {{ item.key }}_filestore:/mnt/backup/src/odoo:z
            - ./post_restore-{{ item.key }}.sql:/tmp/post-restore.sql:ro
            - ./pre_restore-{{ item.key }}.sql:/tmp/pre-restore.sql:ro
        environment:
            PGDATABASE: "{{ item.value.db }}"
            SWIFT_USERNAME: "{{ account.username }}"
            SWIFT_PASSWORD: "{{ account.password }}"
            SWIFT_AUTHURL: "{{ account.authurl }}"
            SWIFT_AUTHVERSION: {{ account.authversion }}
            SWIFT_TENANTNAME: "{{ account.tenantname }}"
            SWIFT_TENANTID: "{{ account.tenantid }}"
            SWIFT_REGIONNAME: "{{ account.regionname }}"
            OPTIONS: "--force"
            DST: "swift://{{ item.value.backup_instance }}_{{ item.value.backup_host | default(inventory_hostname) | lower }}"
            PGUSER: "{{ odoo_instances[item.value.prod_instance | default(item.key )].db_user }}"
            PGPASSWORD: "{{ odoo_instances[item.value.prod_instance | default(item.key )].db_pass }}"
            PASSPHRASE: "{{ hostvars[item.value.backup_host | default(inventory_hostname)]['odoo_instances'][item.value.backup_instance].odoo_backup_pass | default(hostvars[item.value.backup_host | default(inventory_hostname)]['odoo_instances'][item.value.backup_instance].master_pass) }}"
        command: [sh, -c, "psql -a -f /tmp/pre-restore.sql postgres ; echo 'remove existing dir' && rm -rf /mnt/backup/src/odoo/filestore/$$PGDATABASE && restore && echo 'move repo to final dest' && mv /mnt/backup/src/odoo/filestore/{{ hostvars[item.value.backup_host | default(inventory_hostname)]['odoo_instances'][item.value.backup_instance].db }} /mnt/backup/src/odoo/filestore/$$PGDATABASE && echo 'create database' && createdb -T template0 $$PGDATABASE && echo 'restore database' && pg_restore -d $$PGDATABASE $$SRC/{{ hostvars[item.value.backup_host | default(inventory_hostname)]['odoo_instances'][item.value.backup_instance].db }}.pgdump ; psql -a -f /tmp/post-restore.sql $$PGDATABASE"]

networks:
    {{ item.key }}_default:
        external: true
    public:
        driver_opts:
            encrypted: 1

volumes:
    backups_{{ item.value.backup_instance }}{{ account_index + 1 }}_backup_cache:
{% if item.value.backup_host | default(inventory_hostname) == inventory_hostname %}
        external: true
{% endif %}
    {{ item.key }}_filestore:
        external: true
